{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Simple and highly customizable numeric stepper jQuery plugin.","body":"# Numeric Stepper Plug-in for jQuery\r\n\r\nSimple and highly customizable jQuery plug-in Turns a text input into a numeric\r\nstepper.\r\n\r\n## Settings\r\n\r\nEvery options can be overriden by using it's html5 data attribute equivalent,\r\nallowing you to have completely different steppers with one global call.\r\n\r\nHere's a comprehensive list of all the options.\r\n\r\n_The option type appears before each option and default values apper next. If an\r\noption can have multiple values, the default one will be in bold._\r\n\r\n* string **type** _**\"float\"**/\"int\"_  \r\n  This option indicates whether the input will accept decimal values or just\r\n  integers.\r\n* int **floatPrecission** _2_  \r\n  Indicates the floating point precission for decimals. A value of 2 may result\r\n  in a value like 2.14274 to be shown as 2.14.\r\n* bool **ui** _true_\r\n  Whether to show the up/down buttons next to the input.\r\n* bool **allowWheel** _true_\r\n  Allow mouse wheel to increment/decrement number.\r\n* bool **allowArrows** _true_\r\n  Allow keyboard up/down arrows to increment/decrement number.\r\n* number **arrowStep** _1_\r\n  The increment/decrement for keyboard arrows.\r\n* number **wheelStep** _1_\r\n  The increment/decrement for mouse wheel.\r\n* array **limit** _[]_\r\n  The min and max numbers allowed by the input expressed as an array.  \r\n  E.g: `[-5,5]` would only allow a range of numbers between -5 and 5.\r\n* array **preventWheelAcceleration** _true_\r\n  In some systems, like OS X, the wheel has acceleration, and this may cause\r\n  extremeply high increments, enable this option to prevent this.\r\n* string **incrementButton** _&blacktriangle;_\r\n  The content (html) for the increment button\r\n* string **decrementButton** _&blacktriangledown;_\r\n  The content (html) for the decrement button\r\n\r\n### HTML5 settings\r\n\r\nAll of the options explained above can be set on a per-input basis as it's HTML5\r\ndata attribute equivalent, i.e., prepend \"data-\" and camelization becomes\r\nhyphenation.\r\n\r\n**E.g:**\r\n\r\n```html\r\n<input type=\"text\" data-wheel-step=\"2\">\r\n```\r\n\r\n#### Caveat\r\n\r\nWith the `data-limit` option, though, there's a caveat you should be aware of:\r\nIf you intend to only set one limit (being min or max), in JavaScript you could\r\njust leave a value blank, like so `limit: [0,]` this would set the min limit to 0 with\r\nno max limit. But to achieve the same thing with the attribute, you **must**\r\nexplicitly set both limits, this means that to leave a limit unset you must\r\nset it to `null` like this `data-limit=\"[0,null]\"`.\r\n\r\n### Hooks/Events\r\n\r\nAs of now, the plugin does not trigger any events but hooks/callbacks can be\r\nregistered by passing them as options in the settings.  \r\nReal event triggering is planned to be implemented in the somewhat-near future.\r\n\r\nAll the callbacks, with the exception of _onKeyUp_, receive the number value and\r\na boolean (up) indicating whether it was an increment or not.  \r\nThe _onKeyUp_ callback will receive the \"up\" parameter in the future.\r\n\r\nThese are all hooks supported up to the current version:\r\n\r\n* onStep ( _number_ value, _bool_ up )\r\n  Fired each time the value is changed by the buttons, arrow keys or mouse\r\n  wheel.  \r\n* onWheel ( _number_ value, _bool_ up )\r\n  Fired each time the value is changed by the buttons, arrow keys or mouse\r\n  wheel.\r\n* onArrow ( _number_ value, _bool_ up )\r\n* onButton ( _number_ value, _bool_ up )\r\n* onKeyUp ( _number_ value )\r\n\r\n## Usage\r\n\r\n### Default Settings\r\n\r\n```javascript\r\n$('.numeric').stepper();\r\n```\r\n\r\n### Custom settings\r\n\r\n```javascript\r\n$('.numeric').stepper({\r\n    type: 'float'       // Allow floating point numbers\r\n    wheel_step:1,       // Wheel increment is 1\r\n    arrow_step: 0.5,    // Up/Down arrows increment is 0.5\r\n    limit: [0,],         // No negative values\r\n    onStep: function( val, up )\r\n    {\r\n        // do something here...\r\n    }\r\n});\r\n```","google":"","name":"Numeric Stepper"}